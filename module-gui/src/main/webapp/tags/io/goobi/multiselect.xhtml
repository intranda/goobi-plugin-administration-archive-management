<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://xmlns.jcp.org/jsf/core">
<h:body>
    <ui:composition>
        <div class="form-row">
            <div class="form-label d-flex justify-content-between">
                <h:outputLabel
                    for="#{fieldid}"
                    value="#{fieldname}" />

                <h:commandLink
                    rendered="#{vocabularyname != null and AdministrationForm.administrationPlugin.allowVocabularyEdition}"
                    styleClass="btn"
                    onclick="$('#vocabularyModal').modal('show');"
                    action="#{AdministrationForm.administrationPlugin.initializeRecord}"
                    title="#{msgs.plugin_administration_archive_addEntry}">
                    <span class="fa fa-plus-circle" />
                    <f:passThroughAttribute
                        name="data-bs-toggle"
                        value="tooltip" />
                    <f:setPropertyActionListener
                        value="#{fieldtype}"
                        target="#{AdministrationForm.administrationPlugin.vocabularyField}" />
                    <f:setPropertyActionListener
                        value="true"
                        target="#{AdministrationForm.administrationPlugin.displayVocabularyModal}" />
                    <f:ajax
                        execute="@this"
                        render="vocabularyModalContent" />
                </h:commandLink>
            </div>
            <div class="form-input">
                <div class="w-100 d-flex flex-wrap">
                    <h:selectOneMenu
                        id="#{fieldid}"
                        styleClass="form-select #{item.valid ? '' : 'invalid'} w-100"
                        value="#{fieldvalue}"
                        required="false"
                        readonly="false">
                        <f:selectItem
                            itemValue=""
                            itemLabel="#{msgs.bitteAuswaehlen}" />
                        <f:selectItems value="#{selectItems}" />
                        <f:ajax
                            event="change"
                            execute="@this"
                            render=":nodeBox:#{ajaxid} :hierarchy:hierarchy"
                            onevent="(data) => {scrollToCurrentNode(data);}" />
                    </h:selectOneMenu>
                    <div class="pt-1 w-100">
                        <ui:repeat
                            value="#{selectedItems}"
                            var="selection">
                            <h:commandLink action="#{field.removeSelectedValue(selection)}">
                                <span class="badge badge-light-grey">
                                    <h:outputText value="#{msgs[selection]}" />
                                </span>
                                <f:ajax
                                    execute="@this"
                                    render=":nodeBox:#{ajaxid} :hierarchy:hierarchy"
                                    onevent="(data) => {scrollToCurrentNode(data);}" />
                            </h:commandLink>
                        </ui:repeat>
                    </div>
                    <h:outputText
                        styleClass="help-inline color-F"
                        rendered="#{!item.valid}"
                        value="#{msgs[item.validationError]}" />
                </div>
            </div>
            <h:commandLink
                class="btn btn-blank font-light fs-500"
                action="#{item.deleteValue(field)}"
                rendered="#{deletable}">
                <span class="fa fa-trash" />
                <f:ajax
                    execute="@this"
                    render=":nodeBox:#{ajaxid} :hierarchy:hierarchy"
                    onevent="(data) => {scrollToCurrentNode(data);}" />
            </h:commandLink>
        </div>
    </ui:composition>
</h:body>
</html>